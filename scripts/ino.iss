; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "fScout"
#define MyAppVersion "1.0"
#define MyAppPublisher "Jakobimatrix"
#define MyAppURL "https://github.com/Jakobimatrix/settings"
#define MyAppExeName "fScout_GUI.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{58E4E4D3-1CEC-4E7E-B32D-BB0C0030395E}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
LicenseFile=..\LICENSE.md
; Remove the following line to run in administrative install mode (install for all users).
PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=..\
OutputBaseFilename=fScoutInstaller
SetupIconFile=..\resources\fScout.ico
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "..\build_windows_Release_64\src\executable\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build_windows_Release_64\src\*"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\resources\*"; DestDir: "{app}\resources"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Dirs]
Name: "{app}\settings"; Flags: uninsneveruninstall
Name: "{app}\saved_data"; Flags: uninsneveruninstall

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\bin\executable\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\bin\executable\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\bin\executable\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
// Prompt the user whether to delete the "settings and saved_data" folder
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  DeleteSettings: Boolean;
begin
  if CurUninstallStep = usPostUninstall then
  begin
    DeleteSettings := MsgBox(
      'Do you want to delete the settings folder? This removes all saved preferences.',
      mbConfirmation, MB_YESNO) = IDYES;

    if DeleteSettings then
    begin
      DelTree(ExpandConstant('{app}\settings'), True, True, True);
      DelTree(ExpandConstant('{app}\saved_data'), True, True, True);
      DelTree(ExpandConstant('{app}'), True, True, True);
    end;
  end;
end;
